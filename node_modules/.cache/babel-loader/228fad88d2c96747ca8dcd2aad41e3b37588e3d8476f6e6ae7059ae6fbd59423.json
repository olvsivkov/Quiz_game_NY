{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041E\\u043B\\u0435\\u0433\\\\Desktop\\\\\\u0411\\u043B\\u043E\\u043A\\u043D\\u043E\\u0442\\\\CODING\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\\\\historical_dates\\\\historical-dates-test-task\\\\src\\\\components\\\\itemRow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Item({\n  count,\n  question,\n  handleScoreFT,\n  handleScoreST,\n  answer,\n  nameFT,\n  nameST,\n  getQuestionCount\n}) {\n  _s();\n  const [isActive, setIsActive] = useState(false); // false = попап с вопросом скрыт\n  const [isDisplayed, setIsDisplayed] = useState(true); // true = отображает цифры на блоках с вопросами (100, 200, 300 и т.д)\n  const [visibleAnswer, setVisibleAnswer] = useState(true); // toggle показывает и скрывает верный ответ\n  const [clicked, setClicked] = useState(false); // блокирует элемент если на вопрос ответили верно или не верно. Предотвращает повторное откытие окна с вопросом. \n\n  function handleActive() {\n    // открывает попап с вопросом\n    setIsActive(true);\n  }\n  function handleNoneActive(e) {\n    // при верном ответе функция закрывает попап, добавляет очки, блокирует окно с вопросом и добавляет + 1 в фун-ю подсчитывающую отвеченные вопросы(getQuestionCount)\n    if (!clicked) {\n      e.stopPropagation();\n      setIsActive(false);\n      setIsDisplayed(false);\n      getQuestionCount(1);\n      setClicked(true);\n    }\n  }\n  const handleAnswerHidden = () => {\n    setVisibleAnswer(!visibleAnswer);\n  };\n  function handleClosePopupQuestionBlock(e) {\n    // отвечает за крестик в правом верхнем углу )\n    e.stopPropagation();\n    setIsDisplayed(true);\n    setIsActive(false);\n  }\n  const BloсkingElementStyle = {\n    // блокирует элемент после ответа, чтоб повторно не открывался.\n    pointerEvents: clicked ? 'none' : 'auto'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-row-question-block block-hover\",\n    style: BloсkingElementStyle,\n    \"data-testid\": \"item-row-question-block\",\n    onClick: handleActive,\n    children: !isActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"count-info\",\n      children: isDisplayed ? count : \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-active\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"close-question-block\",\n          onClick: handleClosePopupQuestionBlock,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), question, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"answer-btn\",\n          onClick: handleAnswerHidden,\n          children: \" \\u041E\\u0442\\u0432\\u0435\\u0442 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: visibleAnswer ? \" hidden\" : \" \",\n          children: [\" \", answer, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-block\",\n        onClick: handleNoneActive,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team-one\",\n          \"data-testid\": \"team-one\",\n          onClick: () => handleScoreFT(count),\n          children: nameFT ? nameFT : \"Нет названия команды ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"false\",\n          children: \"\\u041D\\u0435 \\u0437\\u043D\\u0430\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team-two\",\n          \"data-testid\": \"team-two\",\n          onClick: () => handleScoreST(count),\n          children: nameST ? nameST : \"Нет названия команды ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n_s(Item, \"YyyfPy2qoLeAc8VubPQ2pZSg9sE=\");\n_c = Item;\nfunction ItemRow({\n  data,\n  index,\n  handleScoreFT,\n  handleScoreST,\n  nameFT,\n  nameST,\n  getQuestionCount\n}) {\n  var _info$questions;\n  const info = data[index];\n  const nameForSing = info.name;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-row-wrapper\",\n    \"data-testid\": \"item-row-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-row-question-block\",\n      children: info.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), info === null || info === void 0 ? void 0 : (_info$questions = info.questions) === null || _info$questions === void 0 ? void 0 : _info$questions.map((item, i) => /*#__PURE__*/_jsxDEV(Item, {\n      count: item.count,\n      question: item.question,\n      handleScoreFT: handleScoreFT,\n      handleScoreST: handleScoreST,\n      answer: item.answer,\n      nameFT: nameFT,\n      nameST: nameST,\n      name: nameForSing,\n      getQuestionCount: getQuestionCount\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ItemRow;\nexport default ItemRow;\nvar _c, _c2;\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"ItemRow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Item","count","question","handleScoreFT","handleScoreST","answer","nameFT","nameST","getQuestionCount","_s","isActive","setIsActive","isDisplayed","setIsDisplayed","visibleAnswer","setVisibleAnswer","clicked","setClicked","handleActive","handleNoneActive","e","stopPropagation","handleAnswerHidden","handleClosePopupQuestionBlock","BloсkingElementStyle","pointerEvents","className","style","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ItemRow","data","index","_info$questions","info","nameForSing","name","questions","map","item","i","_c2","$RefreshReg$"],"sources":["C:/Users/Олег/Desktop/Блокнот/CODING/Тестовые задания/historical_dates/historical-dates-test-task/src/components/itemRow.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\n\r\nfunction Item({count, question, handleScoreFT, handleScoreST, answer, nameFT, nameST, getQuestionCount}) {\r\n\r\n  const [isActive, setIsActive] = useState(false) // false = попап с вопросом скрыт\r\n  const [isDisplayed, setIsDisplayed] = useState(true); // true = отображает цифры на блоках с вопросами (100, 200, 300 и т.д)\r\n  const [visibleAnswer, setVisibleAnswer] = useState(true) // toggle показывает и скрывает верный ответ\r\n  const [clicked, setClicked] = useState(false); // блокирует элемент если на вопрос ответили верно или не верно. Предотвращает повторное откытие окна с вопросом. \r\n\r\n  function handleActive(){ // открывает попап с вопросом\r\n    setIsActive(true)\r\n  }\r\n\r\n  function handleNoneActive(e){ // при верном ответе функция закрывает попап, добавляет очки, блокирует окно с вопросом и добавляет + 1 в фун-ю подсчитывающую отвеченные вопросы(getQuestionCount)\r\n    if (!clicked) {\r\n      e.stopPropagation();\r\n      setIsActive(false)\r\n      setIsDisplayed(false)\r\n      getQuestionCount(1)\r\n      setClicked(true);\r\n    }\r\n  }\r\n\r\n  const handleAnswerHidden = () => {\r\n    setVisibleAnswer(!visibleAnswer)\r\n  }\r\n\r\n  function handleClosePopupQuestionBlock(e){ // отвечает за крестик в правом верхнем углу )\r\n    e.stopPropagation();\r\n    setIsDisplayed(true)\r\n    setIsActive(false)\r\n  }\r\n\r\n  const BloсkingElementStyle = { // блокирует элемент после ответа, чтоб повторно не открывался.\r\n    pointerEvents: clicked ? 'none' : 'auto',\r\n  };\r\n\r\n  return (\r\n      <div className=\"item-row-question-block block-hover\" style={BloсkingElementStyle} data-testid=\"item-row-question-block\" onClick={handleActive}>\r\n        {!isActive ? <div className=\"count-info\">{isDisplayed ? count: \" \"}</div> : (      \r\n          <div className=\"popup-active\">\r\n            <div className=\"question-block\">\r\n            <div className=\"close-question-block\" onClick={handleClosePopupQuestionBlock}>X</div>\r\n              {question}\r\n              <button className=\"answer-btn\" onClick={handleAnswerHidden}> Ответ </button>\r\n              <div className={visibleAnswer ? \" hidden\": \" \"} > {answer} </div>\r\n            </div>\r\n            <div className=\"answer-block\" onClick={handleNoneActive}>\r\n              <div className=\"team-one\" data-testid=\"team-one\" onClick={() => handleScoreFT(count)}>{nameFT ? nameFT : \"Нет названия команды ?\"}</div>\r\n              <div className=\"false\">Не знаю</div>\r\n              <div className=\"team-two\" data-testid=\"team-two\" onClick={() => handleScoreST(count)}>{nameST ? nameST : \"Нет названия команды ?\"}</div>\r\n            </div>\r\n          </div>)\r\n          }\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction ItemRow({data, index, handleScoreFT, handleScoreST, nameFT, nameST, getQuestionCount}) {\r\n  const info = data[index];\r\n  const nameForSing = info.name\r\n  return (\r\n    <div className=\"item-row-wrapper\" data-testid=\"item-row-wrapper\">\r\n      <div className=\"item-row-question-block\">{info.name}</div>\r\n      {info?.questions?.map((item, i) => \r\n        <Item \r\n          key={i} \r\n          count={item.count} \r\n          question={item.question}\r\n          handleScoreFT={handleScoreFT}\r\n          handleScoreST={handleScoreST}\r\n          answer={item.answer}\r\n          nameFT={nameFT}\r\n          nameST={nameST}\r\n          name={nameForSing}\r\n          getQuestionCount={getQuestionCount}\r\n        />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemRow;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}