{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041E\\u043B\\u0435\\u0433\\\\Desktop\\\\\\u0411\\u043B\\u043E\\u043A\\u043D\\u043E\\u0442\\\\CODING\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\\\\historical_dates\\\\historical-dates-test-task\\\\src\\\\components\\\\main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ItemRow from \"./itemRow\";\nimport { Team } from \"./teams\";\nimport { ShowWinner } from \"./showWinner\";\nimport json from \"../DB/data.json\"; // вопросы + ответы из базы данных\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [scoreFT, setScoreFT] = useState(0); // считает очки левой команды\n  const [scoreST, setScoreST] = useState(0); // считает очки правой команды\n  const [nameFT, setNameFT] = useState(\"Team 1\"); // название левой команды\n  const [nameST, setNameST] = useState(\"Team 2\"); // название правой команды\n  const [questionCount, setQuestionCount] = useState(0); // подсчет кол-ва вопросов на которые ответили, если 30, то объявляется победитель <ShowWinner/>\n\n  function handleScoreFT(arg) {\n    setScoreFT(scoreFT + +arg);\n  }\n  function handleScoreST(arg) {\n    setScoreST(scoreST + +arg);\n  }\n  function handleGetNameFT(teamName) {\n    setNameFT(teamName);\n  }\n  function handleGetNameST(teamName) {\n    setNameST(teamName);\n  }\n  function getQuestionCount(count) {\n    setQuestionCount(questionCount + count);\n  }\n  function getStartNewGame() {\n    // после объявления победителя перезагружается окно, чтоб начать новую игру.\n    window.location.reload();\n  }\n  const dataArray = json.items;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-wrapper\",\n    \"data-testid\": \"main-wrapper-element\",\n    children: [/*#__PURE__*/_jsxDEV(Team, {\n      score: scoreFT,\n      handleGetName: handleGetNameFT\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-wrapper-centre\",\n      \"data-testid\": \"main-wrapper-centre\",\n      children: dataArray.map((_, index) => /*#__PURE__*/_jsxDEV(ItemRow, {\n        data: dataArray,\n        index: index,\n        handleScoreFT: handleScoreFT,\n        handleScoreST: handleScoreST,\n        nameFT: nameFT,\n        nameST: nameST,\n        getQuestionCount: getQuestionCount\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Team, {\n      score: scoreST,\n      handleGetName: handleGetNameST\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), questionCount >= 30 ? /*#__PURE__*/_jsxDEV(ShowWinner, {\n      scoreFT: scoreFT,\n      scoreST: scoreST,\n      nameFT: nameFT,\n      nameST: nameST,\n      getStartNewGame: getStartNewGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"pkkP6ksWoMKvo/LVmattUWm/XaM=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","ItemRow","Team","ShowWinner","json","jsxDEV","_jsxDEV","Main","_s","scoreFT","setScoreFT","scoreST","setScoreST","nameFT","setNameFT","nameST","setNameST","questionCount","setQuestionCount","handleScoreFT","arg","handleScoreST","handleGetNameFT","teamName","handleGetNameST","getQuestionCount","count","getStartNewGame","window","location","reload","dataArray","items","className","children","score","handleGetName","fileName","_jsxFileName","lineNumber","columnNumber","map","_","index","data","_c","$RefreshReg$"],"sources":["C:/Users/Олег/Desktop/Блокнот/CODING/Тестовые задания/historical_dates/historical-dates-test-task/src/components/main.jsx"],"sourcesContent":["import React,{useState} from \"react\"\r\nimport ItemRow from \"./itemRow\"\r\nimport { Team } from \"./teams\"\r\nimport { ShowWinner } from \"./showWinner\"\r\nimport json from \"../DB/data.json\" // вопросы + ответы из базы данных\r\n\r\nfunction Main() {\r\n\r\n  const [scoreFT, setScoreFT] = useState(0) // считает очки левой команды\r\n  const [scoreST, setScoreST] = useState(0) // считает очки правой команды\r\n  const [nameFT, setNameFT] = useState(\"Team 1\") // название левой команды\r\n  const [nameST, setNameST] = useState(\"Team 2\") // название правой команды\r\n  const [questionCount, setQuestionCount] = useState(0) // подсчет кол-ва вопросов на которые ответили, если 30, то объявляется победитель <ShowWinner/>\r\n\r\n  function handleScoreFT(arg) {\r\n    setScoreFT(scoreFT + (+arg))\r\n  }\r\n  function handleScoreST(arg) {\r\n    setScoreST(scoreST + (+arg))\r\n  }\r\n  function handleGetNameFT(teamName){\r\n    setNameFT(teamName)\r\n  }\r\n  function handleGetNameST(teamName){\r\n    setNameST(teamName)\r\n  }\r\n  function getQuestionCount(count){\r\n    setQuestionCount(questionCount + count)\r\n  }\r\n  function getStartNewGame(){ // после объявления победителя перезагружается окно, чтоб начать новую игру.\r\n    window.location.reload()\r\n  }\r\n\r\n  const dataArray = json.items\r\n  return (  \r\n    <div className=\"main-wrapper\" data-testid=\"main-wrapper-element\">\r\n      <Team \r\n        score={scoreFT}\r\n        handleGetName={handleGetNameFT}\r\n      />\r\n      <div className=\"main-wrapper-centre\" data-testid=\"main-wrapper-centre\">\r\n        {\r\n          dataArray.map( (_, index) => <ItemRow \r\n            key={index} \r\n            data={dataArray} \r\n            index={index} \r\n            handleScoreFT={handleScoreFT}\r\n            handleScoreST={handleScoreST}\r\n            nameFT={nameFT}\r\n            nameST={nameST}\r\n            getQuestionCount={getQuestionCount}\r\n          /> )\r\n        }\r\n      </div>\r\n      <Team \r\n        score={scoreST}\r\n        handleGetName={handleGetNameST}\r\n      />\r\n      {questionCount >= 30 ? \r\n        <ShowWinner\r\n          scoreFT={scoreFT}\r\n          scoreST={scoreST}\r\n          nameFT={nameFT}\r\n          nameST={nameST}\r\n          getStartNewGame={getStartNewGame}\r\n        /> : \"\"}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}